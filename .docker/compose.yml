x-app: &app
  build:
    context: .
    args:
      RUBY_VERSION: '3.2.2'
      PG_MAJOR: '15'
      NODE_MAJOR: '18'
      YARN_VERSION: '1.22.17'
  image: linker:0.0.1
  environment: &env
    NODE_ENV: ${NODE_ENV:-development}
    RAILS_ENV: ${RAILS_ENV:-development}
  tmpfs:
    - /tmp
    - /app/tmp/pids

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - ..:/app:cached
    - bundle:/usr/local/bundle
    - rails_cache:/app/tmp/cache
    - node_modules:/app/node_modules
    - packs:/app/public/packs
    - packs-test:/app/public/packs-test
    - history:/usr/local/hist
    - ./.psqlrc:/root/.psqlrc:ro
    - ./.bashrc:/root/.bashrc:ro
  environment: &backend_environment
    <<: *env
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    MEILI_URL: http://meili:7700
    MINIO_URL: minio://minio:9001/
    MALLOC_ARENA_MAX: 2
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-1}
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    XDG_DATA_HOME: /app/tmp/cache
    YARN_CACHE_FOLDER: /app/node_modules/.yarn-cache
    HISTFILE: /usr/local/hist/.bash_history
    PSQL_HISTFILE: /usr/local/hist/.psql_history
    IRB_HISTFILE: /usr/local/hist/.irb_history
    EDITOR: vi
  depends_on: &backend_depends_on
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  rails:
    <<: *backend
    command: bundle exec rails

  web:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'
    depends_on:
      js:
        condition: service_started
      css:
        condition: service_started
      sidekiq:
        condition: service_started
      nginx:
        condition: service_started
      # minio:
      #   condition: service_started
      # meili:
      #   condition: service_started

  nginx:
    <<: *backend
    image: 'jc21/nginx-proxy-manager:latest'
    volumes:
      - nginx:/data
      - letsencrypt:/etc/letsencrypt
    ports:
      - '80:80'
      - '81:81'
      - '443:443'

  css:
    <<: *backend
    command: yarn build:css --watch

  js:
    <<: *backend
    command: yarn build --watch

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq

  postgres:
    image: postgres:14
    volumes:
      - .psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - history:/usr/local/hist
    environment:
      PSQL_HISTFILE: /usr/local/hist/.psql_history
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  # meili:
  #   image: getmeili/meilisearch:latest
  #   volumes:
  #     - meili:/data
  #   ports:
  #     - 7700
  #   healthcheck:
  #     test:
  #       [
  #         'CMD',
  #         'wget',
  #         '--no-verbose',
  #         '--spider',
  #         'http://localhost:7700/health',
  #       ]
  #     interval: 1s
  #     timeout: 3s
  #     retries: 30

  # minio:
  #   image: minio/minio:latest
  #   volumes:
  #     - minio:/data
  #   environment:
  #     MINIO_ROOT_USER: agova
  #     MINIO_ROOT_PASSWORD: agovaspassword
  #   ports:
  #     - 9000:9000
  #     - 9001:9001
  #   command: server --console-address ":9001" /data
  #   healthcheck:
  #     test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
  #     interval: 1s
  #     timeout: 3s
  #     retries: 30

volumes:
  bundle:
  node_modules:
  history:
  rails_cache:
  postgres:
  redis:
  packs:
  packs-test:
  nginx:
  letsencrypt:
  # minio:
  # meili:
